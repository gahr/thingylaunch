CMAKE_MINIMUM_REQUIRED (VERSION 2.8)

SET (TL_PROJECT_NAME thingylaunch)
SET (TL_PROJECT_VERS 2.0.3)

PROJECT (${TL_PROJECT_NAME} CXX C)

SET(CMAKE_CXX_FLAGS "-std=c++11")

IF (USE_XCB)
    # Use libxcb
    FIND_PACKAGE (PkgConfig REQUIRED)
    PKG_CHECK_MODULES (PKG_XCB xcb)
    PKG_CHECK_MODULES (PKG_XCB_ICCCM xcb-icccm)
    PKG_CHECK_MODULES (PKG_XCB_KEYSYMS xcb-keysyms)
    SET (X11_INC ${PKG_XCB_INCLUDE_DIRS} ${PKG_XCB_ICCCM_INCLUDE_DIRS} ${PKG_XCB_KEYSYMS_INCLUDE_DIRS})
    SET (X11_LIB ${PKG_XCB_LDFLAGS} ${PKG_XCB_ICCCM_LDFLAGS} ${PKG_XCB_KEYSYMS_LDFLAGS})
    SET (X11_IMP x11_xcb.cpp)
ELSE ()
    # Use libX11
    FIND_PACKAGE (X11)
    SET (X11_INC  ${X11_X11_INCLUDE_PATH})
    SET (X11_LIB ${X11_LIBRARIES})
    SET (X11_IMP x11_libx11.cpp)
ENDIF ()

INCLUDE_DIRECTORIES(${X11_INC})

ADD_EXECUTABLE (
    ${TL_PROJECT_NAME}
    bookmark.cpp
    completion.cpp
    history.cpp
    thingylaunch.cpp
    util.cpp
    ${X11_IMP}
)

TARGET_LINK_LIBRARIES (
    ${TL_PROJECT_NAME}
    ${X11_LIB}
)

INSTALL (
    TARGETS ${TL_PROJECT_NAME}
    RUNTIME DESTINATION bin
)
